name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py') |
          tee pylint.txt
      - name: Upload pylint.txt as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pylint report
          path: pylint.txt

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py37 .
        continue-on-error: true

      - name: Test with pytest
        run: |
          pytest
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Build package
        run: python setup.py sdist bdist_wheel

#      - name: Publish package to Nexus
#        run: |
#          python -m pip install twine
#          twine upload --repository-url [URL_de_votre_repo_Nexus] -u [votre_nom_utilisateur] -p [votre_mot_de_passe] dist/*
#        env:
#          TWINE_USERNAME: ${{ secrets.NEXUS_USERNAME }}  # Créez un secret contenant votre nom d'utilisateur Nexus
#          TWINE_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}  # Créez un secret contenant votre mot de passe Nexus
