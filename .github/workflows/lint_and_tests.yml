name: CI/CD Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Analysing the code with pylint
        run: |
          pip install pylint
          pylint $(git ls-files '*.py') |
          tee pylint.txt
      - name: Upload pylint.txt as artifact
        uses: actions/upload-artifact@v3
        with:
          name: Pylint Analysis
          path: pylint.txt

      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --format=github --target-version=py37 .
        continue-on-error: true

      - name: Run MyPy
        run: |
          pip install mypy
          mypy . | tee mypy.txt
      - name: Archive MyPy output
        uses: actions/upload-artifact@v3
        with:
          name: MyPy Analysis
          path: mypy.txt

      - name: Create annotations for MyPy errors
        if: ${{ failure() }}
        run: |
          mypy your_code_directory --json | jq -c '.items[] | select(.severity == "error") | "::error file=" + .location.file + ",line=" + (.location.line | tostring) + "::$" + .message'
        continue-on-error: true


  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Test with pytest
        run: |
          pip install pytest
          python -m pytest test/ --junitxml=pytest_report.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: Pytest Analysis
          path: pytest_report.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}